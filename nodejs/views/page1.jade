<!DOCTYPE html>

<html>
<meta charset="utf-8">
<head><title> Page 1 </title></head>
<body>

<h1>Page 1</h1>
<h3> Popularity: </h3>
<p> It’s an open source server framework and uses JavaScript on the server. Node.js also runs on various platforms (Windows, Linux, Unix, Mac OS X, etc.). It is popular for its real-time application and fast a scalable solution. </p>
<h3> Strengths: </h3>
<ul>
<li> Node.js is very memory efficient because it runs single-threaded, non-blocking, asynchronous programming.</li>
<li><ins>Asynchronous and Event-driven</ins> - A node.js based server never waits for an API to return data and simply continues with the next request.</li>
<li><ins>Very fast</ins> - being built on Google Chrome’s V8 JavaScript Engine, Node.js library is very fast in code execution.</li>
<li><ins>Single threaded but highly scalable</ins> – uses a single threaded model with event looping. Event mechanism help the server to respond in a non-blocking way.</li>
<li><ins>No buffering</ins> - node.js applications never buffer any data; they simply output the data in chunks.</li>
</ul>
<h3> Weaknesses: </h3>
<p>It is not advisable to use Node.js for CPU intensive applications.</p>
<h3>Which developers mostly use it and for what kind of websites: </h3>
<ul>
<li>Companies such as eBay, GoDaddy, Microsoft, PayPal, Uber, Yahoo!, Netflix, uses node.js. </li>
<li>Node.js could be used for:</li>
<ul>
<li>I/O bound applications</li>
<li>Data streaming applications</li>
<li>Data intensive real-time applications (DIRT)</li>
<li>JSON APIs based Applications</li>
<li>Single page applications</li>
</ul>
</ul>
<h3>Backend or Frontend or Both?</h3>
<ul>
<li>Both. Node.js is a runtime environment based on Google Chrome’s V8 JavaScript Engine. It depends on how you use Node.js.</li>
<li>You can use it as back-end/server side since it can run JavaScript outside of the context of a browser and capabilities to run a non-blocking I/O based HTTP Server.</li>
<li>You can also use it for front-end to build and run unit tests of your front end code. Tools like Grunt, Gulp, Bower use capabilities of Node.js so as to improve and enhance software development.</li>
<ul><i>
<li>Bower – front-end framework for developing responsive, mobile first project on the web.</li>
<li>Grunt – JavaScript task runner. Automatically perform frequent tasks such as compilation, and unit testing.</li>
<li>Gulp – used as a streaming build system in front-end web development</li>
</i></ul>
<li> However, Node.js is designed to serve as backend where JavaScript can be used in the server side for development of web applications.</li>
</ul>
</body>
</html>